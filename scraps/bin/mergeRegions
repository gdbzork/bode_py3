#!/usr/bin/env python

import sys

GENOME = 3137161264
DEBUG = False

################################################################################

def load(fn):
  fd = open(fn)
  intervals = list()
  for line in fd:
    flds = line.split()
    intervals.append((flds[0],int(flds[1]),int(flds[2])))
  fd.close()
  return intervals

def save(intervals,fn):
  fd = open(fn,"w")
  for (c,l,r) in intervals:
    fd.write("%s\t%d\t%d\n" % (c,l,r))
  fd.close()

def report(intervals,genomeSize,fd):
  total = 0
  for (c,l,r) in intervals:
    total += r-l
  perc = int((float(total)/float(genomeSize)) * 10000) / 100.0
  fd.write("nregions=%d length=%d frac=%f\n" % (len(intervals),total,perc))

def mergeFactor(intervals,factor):
  dest = list()
  dest.append(intervals[0])
  for (c,l,r) in intervals[1:]:
    if c != dest[-1][0] :
      d = sys.maxint
    else:
      d = l - dest[-1][2]
    t = (dest[-1][2] - dest[-1][1]) * factor
    if d <= t:
      dest[-1] = (dest[-1][0],dest[-1][1],r)
    else:
      dest.append((c,l,r))
  return dest

def mergeDist(intervals,dist):
  dest = list()
  dest.append(intervals[0])
  for (c,l,r) in intervals[1:]:
    if c != dest[-1][0] :
      d = sys.maxint
    else:
      d = l - dest[-1][2]
    if d <= dist:
      if DEBUG:
        sys.stderr.write("merging %s:%d-%d %s:%d-%d d=%d dist=%f\n" % (dest[-1][0],dest[-1][1],dest[-1][2],c,l,r,d,dist))
      dest[-1] = (dest[-1][0],dest[-1][1],r)
    else:
      dest.append((c,l,r))
  return dest

################################################################################

(num,inFN,outFN) = sys.argv[1:]
num = float(num)
intervals = load(inFN)
sys.stderr.write("initial:\t")
report(intervals,GENOME,sys.stderr)
next = mergeDist(intervals,num)
sys.stderr.write("iteration 1:\t")
report(next,GENOME,sys.stderr)
save(next,outFN)
